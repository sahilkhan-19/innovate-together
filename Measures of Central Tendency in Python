'''
Output Sample
Enter the data (preferably separated by space): 12 21 12 12 2 54 2 35 6 48 97
Choose any option from the following
        0.End
        1.Mean
        2.Median
        3.Mode
        4.Geometric mean
        5.Harmonic mean
Enter choice : 1
27.363636363636363
Enter choice : 2
12
Enter choice : 3
[12]
Enter choice : 4
14.835888135632391
Enter choice : 5
7.131195910037445
Enter choice : 0'''
def mean(l):
    avg=sum(l)/len(l)
    return avg
def median(l):
    l.sort()
    if len(l)%2==0:
        med=(l[len(l)//2-1]+l[len(l)//2])/2
    else:
        med=l[len(l)//2]
    return med
def mode(l):
    frequency={}
    for value in data:
        if value in frequency:
            frequency[value]+=1
        else:
            frequency[value]=1
    max_freq=max(frequency.values())
    mode=[k for k,v in frequency.items() if v==max_freq]
    if len(mode)==len(l):
        return None
    return mode
def geo_mean(l):
    mul=1
    for i in range(0,len(l)):
        mul*=l[i]
    g_mean=(float)(math.pow(mul,(1/len(l))))
    return g_mean
def har_mean(l):
    add=0
    for i in range(0,len(l)):
        add+=(1/l[i])
    h_mean=(float)(len(l)/add)
    return h_mean
data= list(map(int, input("Enter the data (preferably separated by space): ").split()))
choice="y"
print('''Choose any option from the following
        0.End
        1.Mean
        2.Median
        3.Mode
        4.Geometric mean
        5.Harmonic mean''')
while True:
    choice=int(input("Enter choice : "))
    if choice==1:
         print(mean(data))
    elif choice==2:
         print(median(data))
    elif choice==3:
         print(mode(data))
    elif choice==4:
        print(geo_mean(data))
    elif choice==5:
        print(har_mean(data))
    else:
        break

'Another Method---->'

# Getting user input
user_input = input("Enter a series of numbers separated by spaces: ")
data = list(map(int, user_input.split()))
choice = 1

# Calculating mean, median, mode, geometric mean, and harmonic mean
while choice != 0:
    print('''\n1. Mean\n2. Median\n3. Mode\n4. Geometric Mean\n5. Harmonic Mean\n0. End''')
    choice = int(input("\nEnter Choice: "))

    if choice == 1:
        mean = calculate_mean(data)
        print(f"Mean: {mean}")
    
    elif choice == 2:
        median = calculate_median(data)
        print(f"Median: {median}")
    
    elif choice == 3:
        mode = calculate_mode(data)
        print(f"Mode: {mode}")
    
    elif choice == 4:
        geometric_mean = calculate_geometric_mean(data)
        print(f"Geometric Mean: {geometric_mean}")
    
    elif choice == 5:
        harmonic_mean = calculate_harmonic_mean(data)
        print(f"Harmonic Mean: {harmonic_mean}")
    
    elif choice == 0:
        print("Exiting...")

    else:
        print("Invalid choice. Please try again.")


# Function to calculate mean
def calculate_mean(data):
    return sum(data) / len(data)

# Function to calculate median
def calculate_median(data):
    data.sort()
    n = len(data)
    if n % 2 == 0:
        median = (data[n//2 - 1] + data[n//2]) / 2
    else:
        median = data[n//2]
    return median

# Function to calculate mode
def calculate_mode(data):
    frequency = {}
    for num in data:
        frequency[num] = frequency.get(num, 0) + 1
    
    max_frequency = max(frequency.values())
    mode = [key for key, value in frequency.items() if value == max_frequency]
    
    # If all numbers appear only once, there is no mode
    if len(mode) == len(data):
        return None
    return mode

# Function to calculate geometric mean
def calculate_geometric_mean(data):
    product = 1
    for num in data:
        product *= num
    return product ** (1/len(data))

# Function to calculate harmonic mean
def calculate_harmonic_mean(data):
    reciprocal_sum = sum(1 / num for num in data)
    return len(data) / reciprocal_sum

